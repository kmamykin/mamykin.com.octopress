---
layout: post
title: How to build Sun JDK 1.6 from source on Windows
---

h1. {{ page.title }}

h2. Overview

h2. Updating Gemfile

code. 
> bundle update rails
Bundler could not find find gem activesupport (= 3.1.0.rc3, runtime),which is required by gem multi_json (~> 1.0, runtime).

code. 
> bundle install
Fetching source index for http://rubygems.org/
You have requested:
  rails ~> 3.1.0.rc4

The bundle currently has rails locked at 3.0.9.
Try running `bundle update rails`

The approach I took is to comment out all my gems in Gemfile except
those that are dependency of rails 3.1, update rails, and then uncomment
gems one by one and deal with errors.

For example, in my case linkedin gem was found to cause the problem
depending on earlier versions of multi_json, where as rails 3.1 requires as a minimum
1.0.2.

Another approach is to rename the gemset (you are using rvm, aren't
you?) to something else for reference and create an empty gemset with
the original name. Then try to install the updated Gemfile with bundle
install. (Note, you may need to remove Gemfile.lock before this)

Running bundle install on a recreated gemset seems to be the cleaner
approach, and that is the one I used.

Go through the tests output and fix deprecation warnings.

You might want to disable asset pipeline to test the app now. Inside
config/application.rb put 

    # Disable the asset pipeline for now
    config.assets.enabled = false # <== this is temporary, to make
things work without the assets pipeline


h3. Errors and Solutions

undefined method `debug_rjs=' for ActionView::Base:Class

This option was "removed in rails":https://github.com/rails/rails/commit/d8f23ca627df85b33fe8db87db5483c10b62bfe6
You will need to remove a reference to it from config/environments/development.rb


If you are on *nix machine you may get:
 
/home/kmamykin/.rvm/gems/ruby-1.9.2-p180@qrious/gems/execjs-1.2.0/lib/execjs/runtimes.rb:46:in `autodetect': Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)
        from /home/kmamykin/.rvm/gems/ruby-1.9.2-p180@qrious/gems/execjs-1.2.0/lib/execjs.rb:5:in `<module:ExecJS>'
        from /home/kmamykin/.rvm/gems/ruby-1.9.2-p180@qrious/gems/execjs-1.2.0/lib/execjs.rb:4:in `<top (required)>'
        from /home/kmamykin/.rvm/gems/ruby-1.9.2-p180@qrious/gems/coffee-script-2.2.0/lib/coffee_script.rb:1:in `require'

In this case you need to install one of JavaScript runtimes, for example Node.js with

sudo apt-get install nodejs

h2. Updating config files

Right now is a good time to generate a new rails 3.1 application and
compare/diff the generated files under config folder with your
application. 

For my application I had to do the following changes:

Replaced config/boot.rb with the one generated by rails 3.1

In config/application.rb added the following line.

# Enable the asset pipeline
config.assets.enabled = true

In config/environments/development.rb removed the following line:

config.action_view.debug_rjs = true

Copy over config/initializers/wrap_parametes.rb

Added the following lines to config/environments/development.rb

  # Do not compress assets
  config.assets.compress = false
Added the following lines to config/encironments/test.rb

  # Configure static asset server for tests with Cache-Control for performance
  config.serve_static_assets = true
  config.static_cache_control = "public, max-age=3600"

Added the following lines to config/environments/production.rb.

  # Compress JavaScripts and CSS
  config.assets.compress = true
# Compress both stylesheets and JavaScripts
config.assets.js_compressor  = :uglifier
config.assets.css_compressor = :scss


